#! /bin/bash
### BEGIN INIT INFO
# Provides:          lcdfs
# Required-Start:    $local_fs $syslog
# Required-Stop:     $local_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: LCD FUSE file system
# Description:       LCD FUSE file system
### END INIT INFO

# Author: Eric Pascual <eric@pobot.org>

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="FUSE file system for LCD interaction"
NAME=lcdfs
DAEMON=/home/pi/.local/bin/lcdfs
DAEMON_ARGS="-t panel -v"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME


VARRUN=/var/run
VARLOG=/var/log

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 1

# setup global definitions, such as PYTHONPATH
export PYTHONPATH=/home/pi/.local/lib/python2.7/site-packages/

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

do_start() {
    log_daemon_msg "Starting $NAME ($DESC)"
    # Return
    # 0 if daemon has been started
    # 1 if daemon was already running
    # 2 if daemon could not be started
    if [ -f $PIDFILE ] ; then
        echo -n " already started"
        RETVAL=1
    else
        echo "" >> $LOGFILE
        echo "-------- Starting service $NAME at $(date)" >> $LOGFILE
        $DAEMON $DAEMON_ARGS >> $LOGFILE 2>&1 &
        pid=$!
        RETVAL="$?"
    fi

    # poor man's strategy for checking if the process didn't hang during startup
    sleep 1
    kill -0 $pid 2> /dev/null && echo $pid > $PIDFILE || RETVAL=2

    case "$RETVAL" in
        0|1) log_end_msg 0 ;;
        2) log_end_msg 1 ;;
    esac

    return $RETVAL
}

#
# Function that stops the daemon/service
#
do_stop() {
    log_daemon_msg "Stopping $NAME ($DESC)"
    # Return
    # 0 if daemon has been stopped
    # 1 if daemon was already stopped
    # 2 if daemon could not be stopped
    # other if a failure occurred
    if [ -f $PIDFILE ] ; then
        echo "" >> $LOGFILE
        echo "-------- Stopping service $NAME at $(date)" >> $LOGFILE
        read pid < $PIDFILE
        kill $pid 2> /dev/null
        RETVAL="$?"
    else
        RETVAL=1
    fi
    case "$RETVAL" in
        0|1) log_end_msg 0 ;;
        2) log_end_msg 1 ;;
    esac

    rm -f $PIDFILE
    return "$RETVAL"
}

case "$1" in
    start)
        do_start
        ;;
    stop)
        do_stop
        ;;
    status)
        #status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
        pgrep -c -f $DAEMON > /dev/null
        case "$?" in
            0) echo "$NAME is running" ; exit 0 ;;
            *) echo "$NAME is not running" ; exit 1 ;;
        esac
        ;;
    restart|force-reload)
        do_stop
        case "$?" in
            0|1)
            do_start
            ;;
                *)
                # Failed to stop
                log_end_msg 1
                ;;
            esac
        ;;
    *)
        echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
        exit 3
        ;;
esac
